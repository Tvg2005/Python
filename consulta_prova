1 - Enunciado: Ao compilar um arquivo salvo com extensao .java, ...
  1 - Resposta : .class
2- Suponha que vc tenha um ArrayList de numero interios chamado numeros. Escreva um programa em Java que execute as seguintes operacoes:
2.a) Adicione os numeros 10, 20, 30 ao ArrayList numeros.
2.b) Imprima o tamanho do ArrayList
2.c) Remova o numero 20 do ArrayList
2.d) Verifique se o numero 40 esta presente no ArrayList e imprima "Encontrado" ou "Nao encontrado" com base no resultado.
  2 - Resposta
    import java.util.ArrayList;
    public class Main {
    	public static void main(String[] args) {
    		ArrayList<Integer> numeros = new ArrayList<Integer>();
    		numeros.add(10);
    		numeros.add(20);
    		numeros.add(30);
    		for(int i = 0; i < numeros.size(); i++) {
    			System.out.println(i);
    		}
    		numeros.remove(1);
    		System.out.println(numeros);
    		if (numeros.contains(40)) {
    			System.out.println("Encontrado");
    		}
    		else {
    			System.out.println("NÃ£o encontrado");
    		}
    	}
    }
3 - Qual das seguintes afirmacoes sobre abstracao em programacao orientada a objetos esta correta?
  Resposta - A abstracao permite representar objetos do mundo real como classes em um programa

4 - x = 4, y = 5 e z = x + y;
  Responda : z/(y + (z - y))
  Resposta:  1
5 - Mostra o resultado da execucao do algoritmo pos-ordem para a arvore binaria apresentada:
   Resposta: 1,4,7,6,3,10,13,14,8
6- Mostra o resultado da execucao do algoritmo em-ordem para a arvore binaria apresentada:
    Resposta : 2,7,5,6,11,2,4,3,5
7 - Analise a arvore e faca correspondencia enumerando as interrogacoes: 
  x1 - Raiz
  x2 - nivel 0 
  x3 - nivel 1 
  x4 - nivel 2
  x5 - nivel 3
  x6 - irmaos
  x7 - 3
  x8 - subarvore
  x9 - no grau 3
  x10 - folha
  x11 - no grau 1


Metodo busca arvore:
Pre-Ordem: RED
Em-Ordem: ERD
Pos-Ordem: EDR


  Hashmap:
public class Main {
  public static void main(String[] args) {
    // Create a HashMap object called people
    HashMap<String, Integer> people = new HashMap<String, Integer>();
    // Add keys and values (Name, Age)
    people.put("John", 32);
    people.put("Steve", 30);
    people.put("Angie", 33);
    for (String i : people.keySet()) {
      System.out.println("key: " + i + " value: " + people.get(i));
    }
  }
}

Outro hashmap:
public class Main {
  public static void main(String[] args) {
    HashMap<String, String> capitais = new HashMap<String, String>();
    // Add keys and values (Country, City)
    capitais.put("England", "London");
    capitais.put("Germany", "Berlin");
    capitais.put("Norway", "Oslo");
// Print keys and values
for (String i : capitais.keySet()) {
  System.out.println("key: " + i + " value: " + capitais.get(i));
}
  }
}
